{"version":3,"file":"static/js/502.65cc5c52.chunk.js","mappings":"0NACA,GAAgB,cAAgB,8BAA8B,WAAa,4B,SC8D3E,EA3De,WAAO,IAAD,EACnB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAK,UAAGT,EAAaU,IAAI,gBAApB,QAAgC,GA8B3C,OAtBAC,EAAAA,EAAAA,YAAU,WACJF,GACFG,MAAM,sIAAD,OACmIH,IAErII,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,8BAAiCF,EAASG,SAElD,OAAOH,EAASI,MACjB,IACAL,MAAK,SAAAM,GACJf,EAAUe,EAAKC,QAChB,IACAC,OAAM,SAAAhB,GACLiB,QAAQjB,MAAM,gCAAiCA,GAC/CC,EAASD,EAAMkB,QAChB,GAEN,GAAE,CAACd,IAEJa,QAAQE,IAAIjB,GAEVF,IACE,iBAAKoB,UAAWC,EAAAA,WAAhB,WACE,0DACA,kBAAOC,KAAK,OAAOC,MAAOnB,EAAOoB,SAhCb,SAAAC,GACH,KAArBA,EAAIC,OAAOH,MACP3B,EAAgB,CAAC,GACjBA,EAAgB,CAAEQ,MAAOqB,EAAIC,OAAOH,OACzC,KA6BK,wBACGzB,EAAO6B,KAAI,SAAAC,GAAK,OACf,eAAmBR,UAAWC,EAAAA,UAA9B,UACE,SAAC,KAAD,CACEQ,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAM9B,GACfkB,UAAWC,EAAAA,cAHb,SAKGO,EAAMK,SANFL,EAAME,GADA,QAe1B,C","sources":["webpack://react-homework-template/./src/components/Pages/Movies/Movies.module.css?72c0","components/Pages/Movies/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieItemLink\":\"Movies_MovieItemLink__2qjm6\",\"SearchList\":\"Movies_SearchList__BYivy\"};","import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  const query = searchParams.get('query') ?? '';\n\n  const updateQueryString = evt => {\n    evt.target.value === ''\n      ? setSearchParams({})\n      : setSearchParams({ query: evt.target.value });\n  };\n\n  useEffect(() => {\n    if (query) {\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=69130d0521ed03b58ebb84abea94c8b9&language=en-US&page=1&include_adult=false&query=${query}`\n      )\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(data => {\n          setMovies(data.results);\n        })\n        .catch(error => {\n          console.error('Error fetching movie details:', error);\n          setError(error.message);\n        });\n    }\n  }, [query]);\n\n  console.log(location);\n  return (\n    error && (\n      <div className={css.SearchList}>\n        <div>Search Movies - about movie</div>\n        <input type=\"text\" value={query} onChange={updateQueryString} />\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id} className={css.MovieItem}>\n              <Link\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n                className={css.MovieItemLink}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  );\n};\n\nexport default Movies;\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","error","setError","location","useLocation","query","get","useEffect","fetch","then","response","ok","Error","status","json","data","results","catch","console","message","log","className","css","type","value","onChange","evt","target","map","movie","to","id","state","from","title"],"sourceRoot":""}